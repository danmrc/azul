<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Finanças on AZUL</title>
    <link>/categories/finan%C3%A7as/</link>
    <description>Recent content in Finanças on AZUL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Mon, 20 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/finan%C3%A7as/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fazendo previsões de séries com Random Forest</title>
      <link>/2019/05/20/forecasting-rf/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/05/20/forecasting-rf/</guid>
      <description>library(randomForest) ## randomForest 4.6-14 ## Type rfNews() to see new features/changes/bug fixes. library(BETS) ## ## Attaching package: &amp;#39;BETS&amp;#39; ## The following object is masked from &amp;#39;package:stats&amp;#39;: ## ## predict </description>
    </item>
    
    <item>
      <title>Medindo a inércia da inflação brasileira no R com Rolling Window Regression</title>
      <link>/2019/05/20/inercia-inflacao-rolling-window/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/05/20/inercia-inflacao-rolling-window/</guid>
      <description>library(ggplot2) library(dplyr) library(BETS) ipca = BETSget(433, from = &amp;quot;1998-09-01&amp;quot;, data.frame = TRUE) # IPCA desde outubro de 98 ipca %&amp;gt;% ggplot(aes(x = date, y = value)) + geom_line(size = 1.2) + xlab(&amp;quot;Tempo&amp;quot;) + ylab(&amp;quot;Variação Mensal do IPCA (em %)&amp;quot;) + geom_hline(yintercept = mean(ipca$value)) # linha horizontal na média Se notarmos a inflação no período \(t\) como \(\pi_t\), modela-la como um processo autoregressivo de ordem \(k\) é estimar o seguinte modelo:</description>
    </item>
    
  </channel>
</rss>